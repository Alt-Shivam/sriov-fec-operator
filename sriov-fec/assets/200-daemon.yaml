apiVersion: v1
kind: ServiceAccount
metadata:
  name: sriov-fec-daemon
  namespace: sriov-fec-operator-resources

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sriov-fec-daemon
  namespace: sriov-fec-operator-resources
rules:
- apiGroups:
  - sriovfec.intel.com
  resources:
  - '*'
  - sriov-fecnodes
  verbs:
  - '*'
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - privileged

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sriov-fec-daemon
  namespace: sriov-fec-operator-resources
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sriov-fec-daemon
  namespace: sriov-fec-operator-resources
subjects:
- kind: ServiceAccount
  name: sriov-fec-daemon
  namespace: sriov-fec-operator-resources
userNames:
- system:serviceaccount:sriov-fec-operator-resources:sriov-fec-daemon

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: sriov-fec-daemonset
  name: sriov-fec-daemonset
  namespace: sriov-fec-operator-resources
  annotations:
    openshift.io/scc: sriov-fec-daemon
spec:
  selector:
    matchLabels:
      app: sriov-fec-daemonset
  template:
    metadata:
      # Mark this pod as a critical add-on; when enabled, the critical add-on scheduler
      # reserves resources for critical add-on pods so that they can be rescheduled after
      # a failure.  This annotation works in tandem with the toleration below.
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: sriov-fec-daemonset
    spec:
      nodeSelector:
        feature.node.kubernetes.io/pci-8086.present: "true"
      tolerations:
      - key: intel.com/sriovfec
        operator: Exists
        effect: NoSchedule
      serviceAccount: sriov-fec-daemon
      serviceAccountName: sriov-fec-daemon
      hostPID: true
      containers:
      - name: sriov-fec-daemon
        image: "{{ .SRIOV_FEC_DAEMON_IMAGE }}:{{ .SRIOV_FEC_DAEMON_VERSION }}"
        imagePullPolicy: Always
        args:
        - --zap-devel
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NODENAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        securityContext:
          privileged: true
          seLinuxOptions:
            level: "s0"
