# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020-2021 Intel Corporation

apiVersion: v1
kind: ServiceAccount
metadata:
  name: fpga-driver
  namespace: "{{ .N3000_NAMESPACE }}"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: fpga-driver
  namespace: "{{ .N3000_NAMESPACE }}"
rules:
- apiGroups:
  - security.openshift.io
  - policy
  resources:
  - securitycontextconstraints
  - podsecuritypolicies
  verbs:
  - use
  resourceNames:
  - privileged

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: fpga-driver
  namespace: "{{ .N3000_NAMESPACE }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fpga-driver
  {{ if eq (.N3000_GENERIC_K8S|ToLower) `false` }}
  namespace: "{{ .N3000_NAMESPACE }}"
  {{ end }}
subjects:
- kind: ServiceAccount
  name: fpga-driver
  namespace: "{{ .N3000_NAMESPACE }}"
  {{ if eq (.N3000_GENERIC_K8S|ToLower) `false` }}
userNames:
- system:serviceaccount:{{ .N3000_NAMESPACE }}:fpga-driver
  {{ end }}
  {{ if eq (.N3000_GENERIC_K8S|ToLower) `true` }}
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: fpga-driver
  namespace:  "{{ .N3000_NAMESPACE }}"
spec:
  hostIPC: false
  hostNetwork: false
  hostPID: true
  hostPorts: []
  allowPrivilegeEscalation: true
  privileged: true
  allowedCapabilities:
    - '*'
  allowedUnsafeSysctls:
    - '*'
  allowedHostPaths: []
  defaultAddCapabilities: []
  fsGroup:
    rule: RunAsAny
  runAsGroup:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  readOnlyRootFilesystem: false
  requiredDropCapabilities: []
  volumes:
    - '*'
  {{ else }}
---
# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  annotations:
    kubernetes.io/description: 'privileged allows access to all privileged and host
      features and the ability to run as any user, any group, any fsGroup, and with
      any SELinux context.  WARNING: this is the most relaxed SCC and should be used
      only for cluster administration. Grant with caution.'
  name: fpga-driver
allowHostDirVolumePlugin: true
allowHostIPC: false
allowHostNetwork: false
allowHostPID: true
allowHostPorts: false
allowPrivilegeEscalation: true
allowPrivilegedContainer: true
allowedCapabilities:
- '*'
allowedUnsafeSysctls:
- '*'
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups:
- system:cluster-admins
- system:nodes
- system:masters
priority: null
readOnlyRootFilesystem: false
requiredDropCapabilities: null
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
seccompProfiles:
- '*'
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:{{ .N3000_NAMESPACE }}:fpga-driver
volumes:
- '*'
  {{ end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: fpga-driver-daemonset
  name: fpga-driver-daemonset
  namespace: "{{ .N3000_NAMESPACE }}"
  annotations:
    openshift.io/scc: fpga-driver
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      app: fpga-driver-daemonset
  template:
    metadata:
      # Mark this pod as a critical add-on; when enabled, the critical add-on scheduler
      # reserves resources for critical add-on pods so that they can be rescheduled after
      # a failure.  This annotation works in tandem with the toleration below.
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: fpga-driver-daemonset
    spec:
      tolerations:
      - key: intel.com/fpga
        operator: Exists
        effect: NoSchedule
      serviceAccount: fpga-driver
      serviceAccountName: fpga-driver
      hostPID: true
  {{ if eq (.N3000_GENERIC_K8S|ToLower) `true` }}
      securityContext:
        runAsUser: 0
  {{ end }}
      containers:
      - image: "{{ .N3000_DRIVER_CONTAINER_IMAGE }}--{{ .kernel }}"
        imagePullPolicy: IfNotPresent
        name: fpga-driver
        command: ["/driver-workdir/entrypoint.sh"]
        securityContext:
          privileged: true
          seLinuxOptions:
            level: "s0"
        volumeMounts:
          - name: host-driver-mtd
            mountPath: /host_driver_mtd
      volumes:
        - name: host-driver-mtd
          hostPath:
            path: "/lib/modules/{{ .kernel }}/kernel/drivers/mtd"
      nodeSelector:
        fpga.intel.com/intel-accelerator-present: ""
